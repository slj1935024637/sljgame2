{"ast":null,"code":"import _classCallCheck from \"d:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"d:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Player from '@/game/entities/Player';\nimport Enemy from '@/game/entities/Enemy';\nimport Projectile from '@/game/entities/Projectile';\nimport TerrainGenerator from '@/game/TerrainGenerator';\nvar GameEngine = /*#__PURE__*/function () {\n  function GameEngine(canvas, store) {\n    _classCallCheck(this, GameEngine);\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.store = store;\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.running = false;\n    this.lastTime = 0;\n\n    // 游戏状态\n    this.gameState = {\n      score: 0,\n      level: 1,\n      gameOver: false,\n      paused: false\n    };\n    this.init();\n  }\n  return _createClass(GameEngine, [{\n    key: \"init\",\n    value: function init() {\n      // 初始化玩家\n      this.player = new Player(this.width / 2, this.height - 100, this);\n\n      // 初始化敌人系统\n      this.enemies = [];\n      this.projectiles = [];\n      this.maxEnemies = 5;\n      this.enemySpawnTimer = 0;\n      this.enemySpawnInterval = 5000;\n      this.lastEnemySpawnTime = 0;\n\n      // 设置事件监听\n      this.setupEventListeners();\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      window.addEventListener('keydown', function (e) {\n        if (_this.player) {\n          _this.player.handleKeyDown(e);\n        }\n        // 处理游戏状态按键\n        if (e.key === 'p') {\n          _this.gameState.paused = !_this.gameState.paused;\n        }\n        if (e.key === 'r' && _this.gameState.gameOver) {\n          _this.restart();\n        }\n      });\n      window.addEventListener('keyup', function (e) {\n        if (_this.player) {\n          _this.player.handleKeyUp(e);\n        }\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (!this.running) {\n        this.running = true;\n        this.lastTime = performance.now();\n        this.gameLoop();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.running = false;\n      this.cleanup();\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      window.removeEventListener('keydown', this.handleKeyDown);\n      window.removeEventListener('keyup', this.handleKeyUp);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.gameState = {\n        score: 0,\n        level: 1,\n        gameOver: false,\n        paused: false\n      };\n      this.init();\n    }\n  }, {\n    key: \"gameLoop\",\n    value: function gameLoop() {\n      var _this2 = this;\n      var currentTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : performance.now();\n      if (!this.running) return;\n      var deltaTime = currentTime - this.lastTime;\n      this.lastTime = currentTime;\n      if (!this.gameState.paused && !this.gameState.gameOver) {\n        this.update(deltaTime);\n        this.draw();\n      }\n      requestAnimationFrame(function (time) {\n        return _this2.gameLoop(time);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(deltaTime) {\n      var _this3 = this;\n      // 更新玩家\n      if (this.player) {\n        this.player.update(deltaTime);\n      }\n\n      // 更新敌人\n      this.enemies.forEach(function (enemy, index) {\n        enemy.update(deltaTime);\n        if (enemy.health <= 0) {\n          _this3.enemies.splice(index, 1);\n          _this3.gameState.score += 100;\n        }\n      });\n\n      // 生成新敌人\n      this.spawnEnemies(deltaTime);\n\n      // 更新投射物\n      this.projectiles.forEach(function (projectile, index) {\n        projectile.update(deltaTime);\n        if (projectile.shouldRemove) {\n          _this3.projectiles.splice(index, 1);\n        }\n      });\n\n      // 检测碰撞\n      this.checkCollisions();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this4 = this;\n      // 清空画布\n      this.ctx.clearRect(0, 0, this.width, this.height);\n\n      // 绘制玩家\n      if (this.player) {\n        this.player.draw(this.ctx);\n      }\n\n      // 绘制敌人\n      this.enemies.forEach(function (enemy) {\n        return enemy.draw(_this4.ctx);\n      });\n\n      // 绘制投射物\n      this.projectiles.forEach(function (projectile) {\n        return projectile.draw(_this4.ctx);\n      });\n\n      // 绘制UI\n      this.drawUI();\n    }\n  }, {\n    key: \"drawUI\",\n    value: function drawUI() {\n      this.ctx.fillStyle = 'white';\n      this.ctx.font = '20px Arial';\n      this.ctx.fillText(\"Score: \".concat(this.gameState.score), 10, 30);\n      this.ctx.fillText(\"Level: \".concat(this.gameState.level), 10, 60);\n      if (this.gameState.paused) {\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        this.ctx.fillStyle = 'white';\n        this.ctx.font = '48px Arial';\n        this.ctx.fillText('PAUSED', this.width / 2 - 80, this.height / 2);\n        this.ctx.font = '24px Arial';\n        this.ctx.fillText('Press P to Resume', this.width / 2 - 80, this.height / 2 + 40);\n      }\n      if (this.gameState.gameOver) {\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        this.ctx.fillStyle = 'white';\n        this.ctx.font = '48px Arial';\n        this.ctx.fillText('Game Over', this.width / 2 - 100, this.height / 2);\n        this.ctx.font = '24px Arial';\n        this.ctx.fillText(\"Final Score: \".concat(this.gameState.score), this.width / 2 - 80, this.height / 2 + 40);\n        this.ctx.fillText('Press R to Restart', this.width / 2 - 80, this.height / 2 + 80);\n      }\n    }\n  }, {\n    key: \"spawnEnemies\",\n    value: function spawnEnemies(deltaTime) {\n      this.enemySpawnTimer += deltaTime;\n      if (this.enemySpawnTimer >= this.enemySpawnInterval && this.enemies.length < this.maxEnemies) {\n        var spawnX = Math.random() * (this.width - 64) + 32;\n        var spawnY = Math.random() * (this.height - 64) + 32;\n        this.enemies.push(new Enemy(spawnX, spawnY, this));\n        this.enemySpawnTimer = 0;\n      }\n    }\n  }, {\n    key: \"checkCollisions\",\n    value: function checkCollisions() {\n      var _this5 = this;\n      // 检查玩家与敌人的碰撞\n      this.enemies.forEach(function (enemy) {\n        if (_this5.player && _this5.checkCollision(_this5.player, enemy)) {\n          _this5.player.takeDamage(10);\n          if (_this5.player.health <= 0) {\n            _this5.gameState.gameOver = true;\n          }\n        }\n      });\n\n      // 检查投射物与敌人的碰撞\n      this.projectiles.forEach(function (projectile) {\n        _this5.enemies.forEach(function (enemy) {\n          if (_this5.checkCollision(projectile, enemy)) {\n            enemy.takeDamage(projectile.damage);\n            projectile.shouldRemove = true;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"checkCollision\",\n    value: function checkCollision(a, b) {\n      return a.x < b.x + b.width && a.x + a.width > b.x && a.y < b.y + b.height && a.y + a.height > b.y;\n    }\n  }]);\n}();\nexport { GameEngine as default };","map":{"version":3,"names":["Player","Enemy","Projectile","TerrainGenerator","GameEngine","canvas","store","_classCallCheck","ctx","getContext","width","height","running","lastTime","gameState","score","level","gameOver","paused","init","_createClass","key","value","player","enemies","projectiles","maxEnemies","enemySpawnTimer","enemySpawnInterval","lastEnemySpawnTime","setupEventListeners","_this","window","addEventListener","e","handleKeyDown","restart","handleKeyUp","start","performance","now","gameLoop","stop","cleanup","removeEventListener","_this2","currentTime","arguments","length","undefined","deltaTime","update","draw","requestAnimationFrame","time","_this3","forEach","enemy","index","health","splice","spawnEnemies","projectile","shouldRemove","checkCollisions","_this4","clearRect","drawUI","fillStyle","font","fillText","concat","fillRect","spawnX","Math","random","spawnY","push","_this5","checkCollision","takeDamage","damage","a","b","x","y","default"],"sources":["d:/slj_doc/game_2/src/game/GameEngine.js"],"sourcesContent":["import Player from '@/game/entities/Player'\nimport Enemy from '@/game/entities/Enemy'\nimport Projectile from '@/game/entities/Projectile'\nimport TerrainGenerator from '@/game/TerrainGenerator'\n\nexport default class GameEngine {\n  constructor(canvas, store) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.store = store;\n    \n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.running = false;\n    this.lastTime = 0;\n\n    // 游戏状态\n    this.gameState = {\n      score: 0,\n      level: 1,\n      gameOver: false,\n      paused: false\n    };\n\n    this.init();\n  }\n\n  init() {\n    // 初始化玩家\n    this.player = new Player(this.width / 2, this.height - 100, this);\n    \n    // 初始化敌人系统\n    this.enemies = [];\n    this.projectiles = [];\n    this.maxEnemies = 5;\n    this.enemySpawnTimer = 0;\n    this.enemySpawnInterval = 5000;\n    this.lastEnemySpawnTime = 0;\n\n    // 设置事件监听\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    window.addEventListener('keydown', (e) => {\n      if (this.player) {\n        this.player.handleKeyDown(e);\n      }\n      // 处理游戏状态按键\n      if (e.key === 'p') {\n        this.gameState.paused = !this.gameState.paused;\n      }\n      if (e.key === 'r' && this.gameState.gameOver) {\n        this.restart();\n      }\n    });\n\n    window.addEventListener('keyup', (e) => {\n      if (this.player) {\n        this.player.handleKeyUp(e);\n      }\n    });\n  }\n\n  start() {\n    if (!this.running) {\n      this.running = true;\n      this.lastTime = performance.now();\n      this.gameLoop();\n    }\n  }\n\n  stop() {\n    this.running = false;\n    this.cleanup();\n  }\n\n  cleanup() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  restart() {\n    this.gameState = {\n      score: 0,\n      level: 1,\n      gameOver: false,\n      paused: false\n    };\n    this.init();\n  }\n\n  gameLoop(currentTime = performance.now()) {\n    if (!this.running) return;\n\n    const deltaTime = currentTime - this.lastTime;\n    this.lastTime = currentTime;\n\n    if (!this.gameState.paused && !this.gameState.gameOver) {\n      this.update(deltaTime);\n      this.draw();\n    }\n\n    requestAnimationFrame((time) => this.gameLoop(time));\n  }\n\n  update(deltaTime) {\n    // 更新玩家\n    if (this.player) {\n      this.player.update(deltaTime);\n    }\n\n    // 更新敌人\n    this.enemies.forEach((enemy, index) => {\n      enemy.update(deltaTime);\n      if (enemy.health <= 0) {\n        this.enemies.splice(index, 1);\n        this.gameState.score += 100;\n      }\n    });\n\n    // 生成新敌人\n    this.spawnEnemies(deltaTime);\n\n    // 更新投射物\n    this.projectiles.forEach((projectile, index) => {\n      projectile.update(deltaTime);\n      if (projectile.shouldRemove) {\n        this.projectiles.splice(index, 1);\n      }\n    });\n\n    // 检测碰撞\n    this.checkCollisions();\n  }\n\n  draw() {\n    // 清空画布\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    // 绘制玩家\n    if (this.player) {\n      this.player.draw(this.ctx);\n    }\n\n    // 绘制敌人\n    this.enemies.forEach(enemy => enemy.draw(this.ctx));\n\n    // 绘制投射物\n    this.projectiles.forEach(projectile => projectile.draw(this.ctx));\n\n    // 绘制UI\n    this.drawUI();\n  }\n\n  drawUI() {\n    this.ctx.fillStyle = 'white';\n    this.ctx.font = '20px Arial';\n    this.ctx.fillText(`Score: ${this.gameState.score}`, 10, 30);\n    this.ctx.fillText(`Level: ${this.gameState.level}`, 10, 60);\n\n    if (this.gameState.paused) {\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = 'white';\n      this.ctx.font = '48px Arial';\n      this.ctx.fillText('PAUSED', this.width / 2 - 80, this.height / 2);\n      this.ctx.font = '24px Arial';\n      this.ctx.fillText('Press P to Resume', this.width / 2 - 80, this.height / 2 + 40);\n    }\n\n    if (this.gameState.gameOver) {\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = 'white';\n      this.ctx.font = '48px Arial';\n      this.ctx.fillText('Game Over', this.width / 2 - 100, this.height / 2);\n      this.ctx.font = '24px Arial';\n      this.ctx.fillText(`Final Score: ${this.gameState.score}`, this.width / 2 - 80, this.height / 2 + 40);\n      this.ctx.fillText('Press R to Restart', this.width / 2 - 80, this.height / 2 + 80);\n    }\n  }\n\n  spawnEnemies(deltaTime) {\n    this.enemySpawnTimer += deltaTime;\n    if (this.enemySpawnTimer >= this.enemySpawnInterval && this.enemies.length < this.maxEnemies) {\n      const spawnX = Math.random() * (this.width - 64) + 32;\n      const spawnY = Math.random() * (this.height - 64) + 32;\n      this.enemies.push(new Enemy(spawnX, spawnY, this));\n      this.enemySpawnTimer = 0;\n    }\n  }\n\n  checkCollisions() {\n    // 检查玩家与敌人的碰撞\n    this.enemies.forEach(enemy => {\n      if (this.player && this.checkCollision(this.player, enemy)) {\n        this.player.takeDamage(10);\n        if (this.player.health <= 0) {\n          this.gameState.gameOver = true;\n        }\n      }\n    });\n\n    // 检查投射物与敌人的碰撞\n    this.projectiles.forEach(projectile => {\n      this.enemies.forEach(enemy => {\n        if (this.checkCollision(projectile, enemy)) {\n          enemy.takeDamage(projectile.damage);\n          projectile.shouldRemove = true;\n        }\n      });\n    });\n  }\n\n  checkCollision(a, b) {\n    return a.x < b.x + b.width &&\n           a.x + a.width > b.x &&\n           a.y < b.y + b.height &&\n           a.y + a.height > b.y;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}