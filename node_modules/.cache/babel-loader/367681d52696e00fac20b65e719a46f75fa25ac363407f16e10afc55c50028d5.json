{"ast":null,"code":"import _classCallCheck from \"D:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nvar Projectile = /*#__PURE__*/function () {\n  function Projectile(x, y, angle, speed, damage, range) {\n    _classCallCheck(this, Projectile);\n    this.x = x;\n    this.y = y;\n    this.angle = angle;\n    this.speed = speed;\n    this.damage = damage;\n    this.range = range;\n\n    // 投射物属性\n    this.width = 8;\n    this.height = 8;\n    this.distanceTraveled = 0;\n    this.shouldRemove = false;\n\n    // 计算速度分量\n    this.velocityX = Math.cos(angle) * speed;\n    this.velocityY = Math.sin(angle) * speed;\n\n    // 粒子效果\n    this.particles = [];\n    this.maxParticles = 10;\n  }\n  return _createClass(Projectile, [{\n    key: \"update\",\n    value: function update(deltaTime) {\n      if (this.shouldRemove) return;\n\n      // 更新位置\n      var moveX = this.velocityX * deltaTime / 1000;\n      var moveY = this.velocityY * deltaTime / 1000;\n      this.x += moveX;\n      this.y += moveY;\n\n      // 计算已移动距离\n      this.distanceTraveled += Math.sqrt(moveX * moveX + moveY * moveY);\n\n      // 检查是否超出射程\n      if (this.distanceTraveled >= this.range) {\n        this.shouldRemove = true;\n      }\n\n      // 更新粒子效果\n      this.updateParticles(deltaTime);\n    }\n  }, {\n    key: \"updateParticles\",\n    value: function updateParticles(deltaTime) {\n      // 添加新粒子\n      if (this.particles.length < this.maxParticles) {\n        this.particles.push({\n          x: this.x,\n          y: this.y,\n          life: 1,\n          size: Math.random() * 3 + 1\n        });\n      }\n\n      // 更新现有粒子\n      for (var i = this.particles.length - 1; i >= 0; i--) {\n        var particle = this.particles[i];\n        particle.life -= deltaTime / 500;\n        if (particle.life <= 0) {\n          this.particles.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (this.shouldRemove) return;\n      ctx.save();\n\n      // 绘制粒子效果\n      this.particles.forEach(function (particle) {\n        ctx.fillStyle = \"rgba(255, 200, 0, \".concat(particle.life, \")\");\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      // 绘制投射物\n      ctx.fillStyle = '#FFD700';\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.width / 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"checkCollision\",\n    value: function checkCollision(enemy) {\n      if (this.shouldRemove) return false;\n\n      // 矩形碰撞检测\n      var projectileLeft = this.x - this.width / 2;\n      var projectileRight = this.x + this.width / 2;\n      var projectileTop = this.y - this.height / 2;\n      var projectileBottom = this.y + this.height / 2;\n      var enemyLeft = enemy.x;\n      var enemyRight = enemy.x + enemy.width;\n      var enemyTop = enemy.y;\n      var enemyBottom = enemy.y + enemy.height;\n      return projectileLeft < enemyRight && projectileRight > enemyLeft && projectileTop < enemyBottom && projectileBottom > enemyTop;\n    }\n  }]);\n}();\nexport { Projectile as default };","map":{"version":3,"names":["Projectile","x","y","angle","speed","damage","range","_classCallCheck","width","height","distanceTraveled","shouldRemove","velocityX","Math","cos","velocityY","sin","particles","maxParticles","_createClass","key","value","update","deltaTime","moveX","moveY","sqrt","updateParticles","length","push","life","size","random","i","particle","splice","draw","ctx","save","forEach","fillStyle","concat","beginPath","arc","PI","fill","restore","checkCollision","enemy","projectileLeft","projectileRight","projectileTop","projectileBottom","enemyLeft","enemyRight","enemyTop","enemyBottom","default"],"sources":["D:/slj_doc/game_2/src/game/entities/Projectile.js"],"sourcesContent":["export default class Projectile {\n  constructor(x, y, angle, speed, damage, range) {\n    this.x = x;\n    this.y = y;\n    this.angle = angle;\n    this.speed = speed;\n    this.damage = damage;\n    this.range = range;\n    \n    // 投射物属性\n    this.width = 8;\n    this.height = 8;\n    this.distanceTraveled = 0;\n    this.shouldRemove = false;\n    \n    // 计算速度分量\n    this.velocityX = Math.cos(angle) * speed;\n    this.velocityY = Math.sin(angle) * speed;\n    \n    // 粒子效果\n    this.particles = [];\n    this.maxParticles = 10;\n  }\n\n  update(deltaTime) {\n    if (this.shouldRemove) return;\n    \n    // 更新位置\n    const moveX = this.velocityX * deltaTime / 1000;\n    const moveY = this.velocityY * deltaTime / 1000;\n    \n    this.x += moveX;\n    this.y += moveY;\n    \n    // 计算已移动距离\n    this.distanceTraveled += Math.sqrt(moveX * moveX + moveY * moveY);\n    \n    // 检查是否超出射程\n    if (this.distanceTraveled >= this.range) {\n      this.shouldRemove = true;\n    }\n    \n    // 更新粒子效果\n    this.updateParticles(deltaTime);\n  }\n\n  updateParticles(deltaTime) {\n    // 添加新粒子\n    if (this.particles.length < this.maxParticles) {\n      this.particles.push({\n        x: this.x,\n        y: this.y,\n        life: 1,\n        size: Math.random() * 3 + 1\n      });\n    }\n    \n    // 更新现有粒子\n    for (let i = this.particles.length - 1; i >= 0; i--) {\n      const particle = this.particles[i];\n      particle.life -= deltaTime / 500;\n      \n      if (particle.life <= 0) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  draw(ctx) {\n    if (this.shouldRemove) return;\n    \n    ctx.save();\n    \n    // 绘制粒子效果\n    this.particles.forEach(particle => {\n      ctx.fillStyle = `rgba(255, 200, 0, ${particle.life})`;\n      ctx.beginPath();\n      ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n      ctx.fill();\n    });\n    \n    // 绘制投射物\n    ctx.fillStyle = '#FFD700';\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.width / 2, 0, Math.PI * 2);\n    ctx.fill();\n    \n    ctx.restore();\n  }\n\n  checkCollision(enemy) {\n    if (this.shouldRemove) return false;\n\n    // 矩形碰撞检测\n    const projectileLeft = this.x - this.width / 2;\n    const projectileRight = this.x + this.width / 2;\n    const projectileTop = this.y - this.height / 2;\n    const projectileBottom = this.y + this.height / 2;\n\n    const enemyLeft = enemy.x;\n    const enemyRight = enemy.x + enemy.width;\n    const enemyTop = enemy.y;\n    const enemyBottom = enemy.y + enemy.height;\n\n    return projectileLeft < enemyRight &&\n           projectileRight > enemyLeft &&\n           projectileTop < enemyBottom &&\n           projectileBottom > enemyTop;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}