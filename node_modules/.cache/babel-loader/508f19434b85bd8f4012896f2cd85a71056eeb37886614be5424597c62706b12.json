{"ast":null,"code":"import _classCallCheck from \"D:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/web.timers.js\";\nvar Enemy = /*#__PURE__*/function () {\n  function Enemy(x, y, game) {\n    _classCallCheck(this, Enemy);\n    this.x = x;\n    this.y = y;\n    this.game = game;\n\n    // 敌人属性\n    this.width = 32;\n    this.height = 32;\n    this.speed = 2;\n    this.health = 100;\n    this.damage = 10;\n    this.attackRange = 50;\n    this.detectionRange = 200;\n\n    // 移动相关\n    this.direction = 1; // 1 for right, -1 for left\n    this.movementTimer = 0;\n    this.movementInterval = 2000; // Change direction every 2 seconds\n\n    // 动画相关\n    this.frameX = 0;\n    this.frameY = 0;\n    this.maxFrame = 3;\n    this.frameTimer = 0;\n    this.frameInterval = 100;\n\n    // 状态\n    this.isAttacking = false;\n    this.isDead = false;\n  }\n  return _createClass(Enemy, [{\n    key: \"update\",\n    value: function update(deltaTime) {\n      if (this.isDead) return;\n\n      // 更新动画帧\n      this.frameTimer += deltaTime;\n      if (this.frameTimer >= this.frameInterval) {\n        this.frameTimer = 0;\n        this.frameX = (this.frameX + 1) % this.maxFrame;\n      }\n\n      // 检测玩家\n      var player = this.game.player;\n      if (player) {\n        var distanceToPlayer = Math.sqrt(Math.pow(player.x - this.x, 2) + Math.pow(player.y - this.y, 2));\n        if (distanceToPlayer <= this.detectionRange) {\n          // 向玩家移动\n          var dx = player.x - this.x;\n          var dy = player.y - this.y;\n          var angle = Math.atan2(dy, dx);\n          this.x += Math.cos(angle) * this.speed;\n          this.y += Math.sin(angle) * this.speed;\n\n          // 设置朝向\n          this.direction = dx > 0 ? 1 : -1;\n\n          // 在攻击范围内则攻击\n          if (distanceToPlayer <= this.attackRange) {\n            this.attack(player);\n          }\n        } else {\n          // 随机巡逻\n          this.patrol(deltaTime);\n        }\n      }\n    }\n  }, {\n    key: \"patrol\",\n    value: function patrol(deltaTime) {\n      this.movementTimer += deltaTime;\n      if (this.movementTimer >= this.movementInterval) {\n        this.direction *= -1;\n        this.movementTimer = 0;\n      }\n      this.x += this.speed * this.direction;\n    }\n  }, {\n    key: \"attack\",\n    value: function attack(player) {\n      var _this = this;\n      if (!this.isAttacking) {\n        this.isAttacking = true;\n        // 造成伤害\n        player.takeDamage(this.damage);\n\n        // 攻击冷却\n        setTimeout(function () {\n          _this.isAttacking = false;\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"takeDamage\",\n    value: function takeDamage(amount) {\n      this.health -= amount;\n      if (this.health <= 0) {\n        this.die();\n      }\n    }\n  }, {\n    key: \"die\",\n    value: function die() {\n      this.isDead = true;\n      // 可以在这里添加死亡动画或粒子效果\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (this.isDead) return;\n      ctx.save();\n\n      // 绘制敌人\n      ctx.fillStyle = 'red';\n      ctx.fillRect(this.x, this.y, this.width, this.height);\n\n      // 绘制血条\n      var healthBarWidth = 32;\n      var healthBarHeight = 5;\n      var healthPercentage = this.health / 100;\n      ctx.fillStyle = 'black';\n      ctx.fillRect(this.x, this.y - 10, healthBarWidth, healthBarHeight);\n      ctx.fillStyle = 'red';\n      ctx.fillRect(this.x, this.y - 10, healthBarWidth * healthPercentage, healthBarHeight);\n      ctx.restore();\n    }\n  }]);\n}();\nexport { Enemy as default };","map":{"version":3,"names":["Enemy","x","y","game","_classCallCheck","width","height","speed","health","damage","attackRange","detectionRange","direction","movementTimer","movementInterval","frameX","frameY","maxFrame","frameTimer","frameInterval","isAttacking","isDead","_createClass","key","value","update","deltaTime","player","distanceToPlayer","Math","sqrt","pow","dx","dy","angle","atan2","cos","sin","attack","patrol","_this","takeDamage","setTimeout","amount","die","draw","ctx","save","fillStyle","fillRect","healthBarWidth","healthBarHeight","healthPercentage","restore","default"],"sources":["D:/slj_doc/game_2/src/game/entities/Enemy.js"],"sourcesContent":["export default class Enemy {\n  constructor(x, y, game) {\n    this.x = x;\n    this.y = y;\n    this.game = game;\n    \n    // 敌人属性\n    this.width = 32;\n    this.height = 32;\n    this.speed = 2;\n    this.health = 100;\n    this.damage = 10;\n    this.attackRange = 50;\n    this.detectionRange = 200;\n    \n    // 移动相关\n    this.direction = 1; // 1 for right, -1 for left\n    this.movementTimer = 0;\n    this.movementInterval = 2000; // Change direction every 2 seconds\n    \n    // 动画相关\n    this.frameX = 0;\n    this.frameY = 0;\n    this.maxFrame = 3;\n    this.frameTimer = 0;\n    this.frameInterval = 100;\n    \n    // 状态\n    this.isAttacking = false;\n    this.isDead = false;\n  }\n\n  update(deltaTime) {\n    if (this.isDead) return;\n\n    // 更新动画帧\n    this.frameTimer += deltaTime;\n    if (this.frameTimer >= this.frameInterval) {\n      this.frameTimer = 0;\n      this.frameX = (this.frameX + 1) % this.maxFrame;\n    }\n\n    // 检测玩家\n    const player = this.game.player;\n    if (player) {\n      const distanceToPlayer = Math.sqrt(\n        Math.pow(player.x - this.x, 2) + Math.pow(player.y - this.y, 2)\n      );\n\n      if (distanceToPlayer <= this.detectionRange) {\n        // 向玩家移动\n        const dx = player.x - this.x;\n        const dy = player.y - this.y;\n        const angle = Math.atan2(dy, dx);\n        \n        this.x += Math.cos(angle) * this.speed;\n        this.y += Math.sin(angle) * this.speed;\n        \n        // 设置朝向\n        this.direction = dx > 0 ? 1 : -1;\n\n        // 在攻击范围内则攻击\n        if (distanceToPlayer <= this.attackRange) {\n          this.attack(player);\n        }\n      } else {\n        // 随机巡逻\n        this.patrol(deltaTime);\n      }\n    }\n  }\n\n  patrol(deltaTime) {\n    this.movementTimer += deltaTime;\n    if (this.movementTimer >= this.movementInterval) {\n      this.direction *= -1;\n      this.movementTimer = 0;\n    }\n    \n    this.x += this.speed * this.direction;\n  }\n\n  attack(player) {\n    if (!this.isAttacking) {\n      this.isAttacking = true;\n      // 造成伤害\n      player.takeDamage(this.damage);\n      \n      // 攻击冷却\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 1000);\n    }\n  }\n\n  takeDamage(amount) {\n    this.health -= amount;\n    if (this.health <= 0) {\n      this.die();\n    }\n  }\n\n  die() {\n    this.isDead = true;\n    // 可以在这里添加死亡动画或粒子效果\n  }\n\n  draw(ctx) {\n    if (this.isDead) return;\n    \n    ctx.save();\n    \n    // 绘制敌人\n    ctx.fillStyle = 'red';\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    \n    // 绘制血条\n    const healthBarWidth = 32;\n    const healthBarHeight = 5;\n    const healthPercentage = this.health / 100;\n    \n    ctx.fillStyle = 'black';\n    ctx.fillRect(\n      this.x,\n      this.y - 10,\n      healthBarWidth,\n      healthBarHeight\n    );\n    \n    ctx.fillStyle = 'red';\n    ctx.fillRect(\n      this.x,\n      this.y - 10,\n      healthBarWidth * healthPercentage,\n      healthBarHeight\n    );\n    \n    ctx.restore();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}