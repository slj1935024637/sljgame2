{"ast":null,"code":"import _objectSpread from \"D:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  name: 'SnakeGame',\n  setup: function setup() {\n    var gameCanvas = ref(null);\n    var canvasWidth = 600;\n    var canvasHeight = 400;\n    var gridSize = 20;\n    var score = ref(0);\n    var highScore = ref(localStorage.getItem('snakeHighScore') || 0);\n    var gameOver = ref(false);\n    var ctx;\n    var snake = [];\n    var food = {};\n    var direction = 'right';\n    var nextDirection = 'right';\n    var gameLoop;\n    var initGame = function initGame() {\n      // 初始化蛇\n      snake = [{\n        x: 6,\n        y: 10\n      }, {\n        x: 5,\n        y: 10\n      }, {\n        x: 4,\n        y: 10\n      }];\n\n      // 生成第一个食物\n      generateFood();\n\n      // 重置游戏状态\n      score.value = 0;\n      gameOver.value = false;\n      direction = 'right';\n      nextDirection = 'right';\n\n      // 开始游戏循环\n      if (gameLoop) clearInterval(gameLoop);\n      gameLoop = setInterval(updateGame, 100);\n    };\n    var generateFood = function generateFood() {\n      var maxX = Math.floor(canvasWidth / gridSize) - 1;\n      var maxY = Math.floor(canvasHeight / gridSize) - 1;\n\n      // 生成随机位置\n      var newFood;\n      do {\n        newFood = {\n          x: Math.floor(Math.random() * maxX),\n          y: Math.floor(Math.random() * maxY)\n        };\n      } while (snake.some(function (segment) {\n        return segment.x === newFood.x && segment.y === newFood.y;\n      }));\n      food = newFood;\n    };\n    var updateGame = function updateGame() {\n      if (gameOver.value) return;\n\n      // 更新方向\n      direction = nextDirection;\n\n      // 计算新的头部位置\n      var head = _objectSpread({}, snake[0]);\n      switch (direction) {\n        case 'up':\n          head.y--;\n          break;\n        case 'down':\n          head.y++;\n          break;\n        case 'left':\n          head.x--;\n          break;\n        case 'right':\n          head.x++;\n          break;\n      }\n\n      // 检查碰撞\n      if (checkCollision(head)) {\n        endGame();\n        return;\n      }\n\n      // 移动蛇\n      snake.unshift(head);\n\n      // 检查是否吃到食物\n      if (head.x === food.x && head.y === food.y) {\n        score.value += 10;\n        if (score.value > highScore.value) {\n          highScore.value = score.value;\n          localStorage.setItem('snakeHighScore', highScore.value);\n        }\n        generateFood();\n      } else {\n        snake.pop();\n      }\n\n      // 绘制游戏\n      drawGame();\n    };\n    var checkCollision = function checkCollision(head) {\n      // 检查墙壁碰撞\n      if (head.x < 0 || head.x >= canvasWidth / gridSize || head.y < 0 || head.y >= canvasHeight / gridSize) {\n        return true;\n      }\n\n      // 检查自身碰撞\n      return snake.some(function (segment) {\n        return segment.x === head.x && segment.y === head.y;\n      });\n    };\n    var drawGame = function drawGame() {\n      if (!ctx) return;\n\n      // 清空画布\n      ctx.fillStyle = '#2c3e50';\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n      // 绘制蛇\n      ctx.fillStyle = '#27ae60';\n      snake.forEach(function (segment, index) {\n        if (index === 0) {\n          // 蛇头用不同颜色\n          ctx.fillStyle = '#2ecc71';\n        } else {\n          ctx.fillStyle = '#27ae60';\n        }\n        ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize - 1, gridSize - 1);\n      });\n\n      // 绘制食物\n      ctx.fillStyle = '#e74c3c';\n      ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize - 1, gridSize - 1);\n    };\n    var handleKeydown = function handleKeydown(e) {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'down') nextDirection = 'up';\n          break;\n        case 'ArrowDown':\n          if (direction !== 'up') nextDirection = 'down';\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'right') nextDirection = 'left';\n          break;\n        case 'ArrowRight':\n          if (direction !== 'left') nextDirection = 'right';\n          break;\n      }\n    };\n    var endGame = function endGame() {\n      gameOver.value = true;\n      clearInterval(gameLoop);\n    };\n    var restartGame = function restartGame() {\n      initGame();\n    };\n    onMounted(function () {\n      ctx = gameCanvas.value.getContext('2d');\n      window.addEventListener('keydown', handleKeydown);\n      initGame();\n    });\n    onUnmounted(function () {\n      window.removeEventListener('keydown', handleKeydown);\n      clearInterval(gameLoop);\n    });\n    return {\n      gameCanvas: gameCanvas,\n      canvasWidth: canvasWidth,\n      canvasHeight: canvasHeight,\n      score: score,\n      highScore: highScore,\n      gameOver: gameOver,\n      restartGame: restartGame\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","name","setup","gameCanvas","canvasWidth","canvasHeight","gridSize","score","highScore","localStorage","getItem","gameOver","ctx","snake","food","direction","nextDirection","gameLoop","initGame","x","y","generateFood","value","clearInterval","setInterval","updateGame","maxX","Math","floor","maxY","newFood","random","some","segment","head","_objectSpread","checkCollision","endGame","unshift","setItem","pop","drawGame","fillStyle","fillRect","forEach","index","handleKeydown","e","key","restartGame","getContext","window","addEventListener","removeEventListener"],"sources":["D:\\slj_doc\\game_2\\src\\components\\SnakeGame.vue"],"sourcesContent":["<template>\n  <div class=\"snake-game\">\n    <div class=\"game-info\">\n      <div class=\"score\">分数: {{ score }}</div>\n      <div class=\"high-score\">最高分: {{ highScore }}</div>\n    </div>\n    <canvas ref=\"gameCanvas\" :width=\"canvasWidth\" :height=\"canvasHeight\"></canvas>\n    <div v-if=\"gameOver\" class=\"game-over\">\n      <h2>游戏结束</h2>\n      <p>最终得分: {{ score }}</p>\n      <button @click=\"restartGame\">重新开始</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\n\nexport default {\n  name: 'SnakeGame',\n  setup() {\n    const gameCanvas = ref(null)\n    const canvasWidth = 600\n    const canvasHeight = 400\n    const gridSize = 20\n    const score = ref(0)\n    const highScore = ref(localStorage.getItem('snakeHighScore') || 0)\n    const gameOver = ref(false)\n\n    let ctx\n    let snake = []\n    let food = {}\n    let direction = 'right'\n    let nextDirection = 'right'\n    let gameLoop\n\n    const initGame = () => {\n      // 初始化蛇\n      snake = [\n        { x: 6, y: 10 },\n        { x: 5, y: 10 },\n        { x: 4, y: 10 }\n      ]\n      \n      // 生成第一个食物\n      generateFood()\n      \n      // 重置游戏状态\n      score.value = 0\n      gameOver.value = false\n      direction = 'right'\n      nextDirection = 'right'\n      \n      // 开始游戏循环\n      if (gameLoop) clearInterval(gameLoop)\n      gameLoop = setInterval(updateGame, 100)\n    }\n\n    const generateFood = () => {\n      const maxX = Math.floor(canvasWidth / gridSize) - 1\n      const maxY = Math.floor(canvasHeight / gridSize) - 1\n      \n      // 生成随机位置\n      let newFood\n      do {\n        newFood = {\n          x: Math.floor(Math.random() * maxX),\n          y: Math.floor(Math.random() * maxY)\n        }\n      } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y))\n      \n      food = newFood\n    }\n\n    const updateGame = () => {\n      if (gameOver.value) return\n\n      // 更新方向\n      direction = nextDirection\n\n      // 计算新的头部位置\n      const head = { ...snake[0] }\n      switch (direction) {\n        case 'up':\n          head.y--\n          break\n        case 'down':\n          head.y++\n          break\n        case 'left':\n          head.x--\n          break\n        case 'right':\n          head.x++\n          break\n      }\n\n      // 检查碰撞\n      if (checkCollision(head)) {\n        endGame()\n        return\n      }\n\n      // 移动蛇\n      snake.unshift(head)\n\n      // 检查是否吃到食物\n      if (head.x === food.x && head.y === food.y) {\n        score.value += 10\n        if (score.value > highScore.value) {\n          highScore.value = score.value\n          localStorage.setItem('snakeHighScore', highScore.value)\n        }\n        generateFood()\n      } else {\n        snake.pop()\n      }\n\n      // 绘制游戏\n      drawGame()\n    }\n\n    const checkCollision = (head) => {\n      // 检查墙壁碰撞\n      if (head.x < 0 || head.x >= canvasWidth / gridSize ||\n          head.y < 0 || head.y >= canvasHeight / gridSize) {\n        return true\n      }\n\n      // 检查自身碰撞\n      return snake.some(segment => segment.x === head.x && segment.y === head.y)\n    }\n\n    const drawGame = () => {\n      if (!ctx) return\n\n      // 清空画布\n      ctx.fillStyle = '#2c3e50'\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight)\n\n      // 绘制蛇\n      ctx.fillStyle = '#27ae60'\n      snake.forEach((segment, index) => {\n        if (index === 0) {\n          // 蛇头用不同颜色\n          ctx.fillStyle = '#2ecc71'\n        } else {\n          ctx.fillStyle = '#27ae60'\n        }\n        ctx.fillRect(\n          segment.x * gridSize,\n          segment.y * gridSize,\n          gridSize - 1,\n          gridSize - 1\n        )\n      })\n\n      // 绘制食物\n      ctx.fillStyle = '#e74c3c'\n      ctx.fillRect(\n        food.x * gridSize,\n        food.y * gridSize,\n        gridSize - 1,\n        gridSize - 1\n      )\n    }\n\n    const handleKeydown = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'down') nextDirection = 'up'\n          break\n        case 'ArrowDown':\n          if (direction !== 'up') nextDirection = 'down'\n          break\n        case 'ArrowLeft':\n          if (direction !== 'right') nextDirection = 'left'\n          break\n        case 'ArrowRight':\n          if (direction !== 'left') nextDirection = 'right'\n          break\n      }\n    }\n\n    const endGame = () => {\n      gameOver.value = true\n      clearInterval(gameLoop)\n    }\n\n    const restartGame = () => {\n      initGame()\n    }\n\n    onMounted(() => {\n      ctx = gameCanvas.value.getContext('2d')\n      window.addEventListener('keydown', handleKeydown)\n      initGame()\n    })\n\n    onUnmounted(() => {\n      window.removeEventListener('keydown', handleKeydown)\n      clearInterval(gameLoop)\n    })\n\n    return {\n      gameCanvas,\n      canvasWidth,\n      canvasHeight,\n      score,\n      highScore,\n      gameOver,\n      restartGame\n    }\n  }\n}\n</script>\n\n<style scoped>\n.snake-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.game-info {\n  display: flex;\n  gap: 2rem;\n  color: white;\n  font-size: 1.5rem;\n}\n\ncanvas {\n  border: 4px solid #34495e;\n  border-radius: 8px;\n}\n\n.game-over {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.8);\n  padding: 2rem;\n  border-radius: 8px;\n  text-align: center;\n  color: white;\n}\n\n.game-over h2 {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n}\n\n.game-over button {\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  font-size: 1.2rem;\n  background-color: #e74c3c;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.game-over button:hover {\n  background-color: #c0392b;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}