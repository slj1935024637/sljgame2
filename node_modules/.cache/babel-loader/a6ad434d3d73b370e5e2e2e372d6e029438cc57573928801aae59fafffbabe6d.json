{"ast":null,"code":"import _classCallCheck from \"d:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"d:/slj_doc/game_2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nvar Player = /*#__PURE__*/function () {\n  function Player(x, y, game) {\n    _classCallCheck(this, Player);\n    this.game = game;\n    this.x = x;\n    this.y = y;\n    this.width = 30;\n    this.height = 50;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.speed = 5;\n    this.jumpForce = 15;\n    this.gravity = 0.5;\n    this.health = 100;\n\n    // Movement states\n    this.isJumping = false;\n    this.isGrounded = false;\n    this.keys = {\n      left: false,\n      right: false,\n      up: false,\n      space: false,\n      a: false\n    };\n\n    // Combat properties\n    this.attackDamage = 25;\n    this.attackRange = 60;\n    this.attackDuration = 300;\n    this.attackCooldown = 500;\n    this.lastAttackTime = 0;\n    this.isAttacking = false;\n\n    // Ranged attack properties\n    this.projectileDamage = 15;\n    this.projectileSpeed = 15;\n    this.shootCooldown = 800;\n    this.lastShootTime = 0;\n\n    // Animation properties\n    this.lastDirection = 1; // 1 for right, -1 for left\n    this.color = '#4CAF50'; // Player color\n  }\n  return _createClass(Player, [{\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      switch (e.key.toLowerCase()) {\n        case 'arrowleft':\n        case 'a':\n          this.keys.left = true;\n          break;\n        case 'arrowright':\n        case 'd':\n          this.keys.right = true;\n          break;\n        case 'arrowup':\n        case 'w':\n        case ' ':\n          if (!this.keys.up && this.isGrounded) {\n            this.keys.up = true;\n            this.jump();\n          }\n          break;\n        case 'j':\n          this.meleeAttack();\n          break;\n        case 'k':\n          this.rangedAttack();\n          break;\n      }\n    }\n  }, {\n    key: \"handleKeyUp\",\n    value: function handleKeyUp(e) {\n      switch (e.key.toLowerCase()) {\n        case 'arrowleft':\n        case 'a':\n          this.keys.left = false;\n          break;\n        case 'arrowright':\n        case 'd':\n          this.keys.right = false;\n          break;\n        case 'arrowup':\n        case 'w':\n        case ' ':\n          this.keys.up = false;\n          break;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(deltaTime) {\n      // 水平移动\n      this.velocityX = 0;\n      if (this.keys.left) {\n        this.velocityX = -this.speed;\n        this.lastDirection = -1;\n      }\n      if (this.keys.right) {\n        this.velocityX = this.speed;\n        this.lastDirection = 1;\n      }\n\n      // 应用重力\n      if (!this.isGrounded) {\n        this.velocityY += this.gravity;\n      }\n\n      // 更新位置\n      this.x += this.velocityX;\n      this.y += this.velocityY;\n\n      // 边界检查\n      if (this.x < 0) this.x = 0;\n      if (this.x + this.width > this.game.width) this.x = this.game.width - this.width;\n      if (this.y < 0) {\n        this.y = 0;\n        this.velocityY = 0;\n      }\n      if (this.y + this.height > this.game.height) {\n        this.y = this.game.height - this.height;\n        this.velocityY = 0;\n        this.isGrounded = true;\n      } else {\n        this.isGrounded = false;\n      }\n\n      // 更新攻击状态\n      if (this.isAttacking && Date.now() - this.lastAttackTime > this.attackDuration) {\n        this.isAttacking = false;\n      }\n    }\n  }, {\n    key: \"jump\",\n    value: function jump() {\n      if (this.isGrounded) {\n        this.velocityY = -this.jumpForce;\n        this.isGrounded = false;\n        this.isJumping = true;\n      }\n    }\n  }, {\n    key: \"meleeAttack\",\n    value: function meleeAttack() {\n      var _this = this;\n      var now = Date.now();\n      if (now - this.lastAttackTime > this.attackCooldown) {\n        this.isAttacking = true;\n        this.lastAttackTime = now;\n\n        // 检查攻击范围内的敌人\n        this.game.enemies.forEach(function (enemy) {\n          var dx = enemy.x - _this.x;\n          var dy = enemy.y - _this.y;\n          var distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < _this.attackRange) {\n            enemy.takeDamage(_this.attackDamage);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"rangedAttack\",\n    value: function rangedAttack() {\n      var now = Date.now();\n      if (now - this.lastShootTime > this.shootCooldown) {\n        this.lastShootTime = now;\n\n        // 创建投射物\n        var projectile = {\n          x: this.x + this.width / 2,\n          y: this.y + this.height / 2,\n          velocityX: this.projectileSpeed * this.lastDirection,\n          damage: this.projectileDamage\n        };\n        this.game.projectiles.push(projectile);\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      // 绘制玩家\n      ctx.fillStyle = this.color;\n      ctx.fillRect(this.x, this.y, this.width, this.height);\n\n      // 绘制攻击范围（如果正在攻击）\n      if (this.isAttacking) {\n        ctx.strokeStyle = '#FF0000';\n        ctx.beginPath();\n        ctx.arc(this.x + this.width / 2, this.y + this.height / 2, this.attackRange, 0, Math.PI * 2);\n        ctx.stroke();\n      }\n\n      // 绘制生命值条\n      var healthBarWidth = 40;\n      var healthBarHeight = 5;\n      var healthPercentage = this.health / 100;\n      ctx.fillStyle = '#FF0000';\n      ctx.fillRect(this.x - (healthBarWidth - this.width) / 2, this.y - 10, healthBarWidth, healthBarHeight);\n      ctx.fillStyle = '#00FF00';\n      ctx.fillRect(this.x - (healthBarWidth - this.width) / 2, this.y - 10, healthBarWidth * healthPercentage, healthBarHeight);\n    }\n  }, {\n    key: \"takeDamage\",\n    value: function takeDamage(amount) {\n      this.health = Math.max(0, this.health - amount);\n      if (this.health <= 0) {\n        this.game.gameState.gameOver = true;\n      }\n    }\n  }]);\n}();\nexport { Player as default };","map":{"version":3,"names":["Player","x","y","game","_classCallCheck","width","height","velocityX","velocityY","speed","jumpForce","gravity","health","isJumping","isGrounded","keys","left","right","up","space","a","attackDamage","attackRange","attackDuration","attackCooldown","lastAttackTime","isAttacking","projectileDamage","projectileSpeed","shootCooldown","lastShootTime","lastDirection","color","_createClass","key","value","handleKeyDown","e","toLowerCase","jump","meleeAttack","rangedAttack","handleKeyUp","update","deltaTime","Date","now","_this","enemies","forEach","enemy","dx","dy","distance","Math","sqrt","takeDamage","projectile","damage","projectiles","push","draw","ctx","fillStyle","fillRect","strokeStyle","beginPath","arc","PI","stroke","healthBarWidth","healthBarHeight","healthPercentage","amount","max","gameState","gameOver","default"],"sources":["d:/slj_doc/game_2/src/game/entities/Player.js"],"sourcesContent":["export default class Player {\n  constructor(x, y, game) {\n    this.game = game;\n    this.x = x;\n    this.y = y;\n    this.width = 30;\n    this.height = 50;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.speed = 5;\n    this.jumpForce = 15;\n    this.gravity = 0.5;\n    this.health = 100;\n    \n    // Movement states\n    this.isJumping = false;\n    this.isGrounded = false;\n    this.keys = {\n      left: false,\n      right: false,\n      up: false,\n      space: false,\n      a: false\n    };\n    \n    // Combat properties\n    this.attackDamage = 25;\n    this.attackRange = 60;\n    this.attackDuration = 300;\n    this.attackCooldown = 500;\n    this.lastAttackTime = 0;\n    this.isAttacking = false;\n    \n    // Ranged attack properties\n    this.projectileDamage = 15;\n    this.projectileSpeed = 15;\n    this.shootCooldown = 800;\n    this.lastShootTime = 0;\n    \n    // Animation properties\n    this.lastDirection = 1; // 1 for right, -1 for left\n    this.color = '#4CAF50'; // Player color\n  }\n\n  handleKeyDown(e) {\n    switch(e.key.toLowerCase()) {\n      case 'arrowleft':\n      case 'a':\n        this.keys.left = true;\n        break;\n      case 'arrowright':\n      case 'd':\n        this.keys.right = true;\n        break;\n      case 'arrowup':\n      case 'w':\n      case ' ':\n        if (!this.keys.up && this.isGrounded) {\n          this.keys.up = true;\n          this.jump();\n        }\n        break;\n      case 'j':\n        this.meleeAttack();\n        break;\n      case 'k':\n        this.rangedAttack();\n        break;\n    }\n  }\n\n  handleKeyUp(e) {\n    switch(e.key.toLowerCase()) {\n      case 'arrowleft':\n      case 'a':\n        this.keys.left = false;\n        break;\n      case 'arrowright':\n      case 'd':\n        this.keys.right = false;\n        break;\n      case 'arrowup':\n      case 'w':\n      case ' ':\n        this.keys.up = false;\n        break;\n    }\n  }\n\n  update(deltaTime) {\n    // 水平移动\n    this.velocityX = 0;\n    if (this.keys.left) {\n      this.velocityX = -this.speed;\n      this.lastDirection = -1;\n    }\n    if (this.keys.right) {\n      this.velocityX = this.speed;\n      this.lastDirection = 1;\n    }\n\n    // 应用重力\n    if (!this.isGrounded) {\n      this.velocityY += this.gravity;\n    }\n\n    // 更新位置\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n\n    // 边界检查\n    if (this.x < 0) this.x = 0;\n    if (this.x + this.width > this.game.width) this.x = this.game.width - this.width;\n    if (this.y < 0) {\n      this.y = 0;\n      this.velocityY = 0;\n    }\n    if (this.y + this.height > this.game.height) {\n      this.y = this.game.height - this.height;\n      this.velocityY = 0;\n      this.isGrounded = true;\n    } else {\n      this.isGrounded = false;\n    }\n\n    // 更新攻击状态\n    if (this.isAttacking && Date.now() - this.lastAttackTime > this.attackDuration) {\n      this.isAttacking = false;\n    }\n  }\n\n  jump() {\n    if (this.isGrounded) {\n      this.velocityY = -this.jumpForce;\n      this.isGrounded = false;\n      this.isJumping = true;\n    }\n  }\n\n  meleeAttack() {\n    const now = Date.now();\n    if (now - this.lastAttackTime > this.attackCooldown) {\n      this.isAttacking = true;\n      this.lastAttackTime = now;\n      \n      // 检查攻击范围内的敌人\n      this.game.enemies.forEach(enemy => {\n        const dx = enemy.x - this.x;\n        const dy = enemy.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        if (distance < this.attackRange) {\n          enemy.takeDamage(this.attackDamage);\n        }\n      });\n    }\n  }\n\n  rangedAttack() {\n    const now = Date.now();\n    if (now - this.lastShootTime > this.shootCooldown) {\n      this.lastShootTime = now;\n      \n      // 创建投射物\n      const projectile = {\n        x: this.x + this.width / 2,\n        y: this.y + this.height / 2,\n        velocityX: this.projectileSpeed * this.lastDirection,\n        damage: this.projectileDamage\n      };\n      \n      this.game.projectiles.push(projectile);\n    }\n  }\n\n  draw(ctx) {\n    // 绘制玩家\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n\n    // 绘制攻击范围（如果正在攻击）\n    if (this.isAttacking) {\n      ctx.strokeStyle = '#FF0000';\n      ctx.beginPath();\n      ctx.arc(\n        this.x + this.width / 2,\n        this.y + this.height / 2,\n        this.attackRange,\n        0,\n        Math.PI * 2\n      );\n      ctx.stroke();\n    }\n\n    // 绘制生命值条\n    const healthBarWidth = 40;\n    const healthBarHeight = 5;\n    const healthPercentage = this.health / 100;\n    \n    ctx.fillStyle = '#FF0000';\n    ctx.fillRect(\n      this.x - (healthBarWidth - this.width) / 2,\n      this.y - 10,\n      healthBarWidth,\n      healthBarHeight\n    );\n    \n    ctx.fillStyle = '#00FF00';\n    ctx.fillRect(\n      this.x - (healthBarWidth - this.width) / 2,\n      this.y - 10,\n      healthBarWidth * healthPercentage,\n      healthBarHeight\n    );\n  }\n\n  takeDamage(amount) {\n    this.health = Math.max(0, this.health - amount);\n    if (this.health <= 0) {\n      this.game.gameState.gameOver = true;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}